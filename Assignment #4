var Payroll = artifacts.require("./Payroll.sol");

contract('Payroll', function(accounts) {

    it("...should add/remove employee.", function() {
        return Payroll.deployed().then(function(instance) {
            payrollInstance = instance;
    
            return payrollInstance.addEmployee(accounts[1], 1,{from: accounts[0]});
        }).then(function() {
            return payrollInstance.removeEmployee(accounts[1]);
        }).then(function() {
            assert(true, "pass");
        })
    });

    it("...should add valid address.", function() {
        return Payroll.deployed().then(function(instance) {
            payrollInstance = instance;
    
            return payrollInstance.addEmployee("0x0", 1,{from: accounts[0]});
        }).catch(function(error) {
            assert(error.toString().includes('invalid opcode'), "expect exception here");
    
        });
    });

    it("...should add employee only once.", function() {
        return Payroll.deployed().then(function(instance) {
            payrollInstance = instance;
    
            return payrollInstance.addEmployee(accounts[1], 1,{from: accounts[0]});
        }).then(function() {
            return payrollInstance.addEmployee(accounts[1], 1,{from: accounts[0]});
        }).catch(function(error) {
            assert(error.toString().includes('invalid opcode'), "expect exception here");
    
        });
    });
});

